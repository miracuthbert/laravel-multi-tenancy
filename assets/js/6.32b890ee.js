(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{214:function(e,t,o){"use strict";o.r(t);var a=o(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"configuration"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),o("p",[e._v("To customize the package usage, copy the package config to your local config by using the publish command:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("php artisan vendor:publish --tag=tenancy-config\n")])])]),o("p",[e._v("The package config will be published to "),o("code",[e._v("config")]),e._v(" folder under the name "),o("code",[e._v("tenancy.php")]),e._v(".")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("You can skip the step above if you have run the: "),o("code",[e._v("php artisan tenancy:setup")]),e._v(" command")])]),e._v(" "),o("p",[e._v("The package includes configuration for:")]),e._v(" "),o("h2",{attrs:{id:"default-driver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#default-driver"}},[e._v("#")]),e._v(" Default driver")]),e._v(" "),o("p",[e._v("Use by the "),o("code",[e._v("default")]),e._v(" key to set the tenancy driver to use. The default the driver is "),o("code",[e._v("single")]),e._v(".")]),e._v(" "),o("blockquote",[o("p",[e._v("Note that the driver should have been registered in the drivers option of the config file.")])]),e._v(" "),o("h2",{attrs:{id:"model"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[e._v("#")]),e._v(" Model")]),e._v(" "),o("p",[e._v("This sets options for the tenant model to use.")]),e._v(" "),o("p",[e._v("You can set the "),o("code",[e._v("class")]),e._v(", "),o("code",[e._v("key")]),e._v(" and "),o("code",[e._v("route_key")]),e._v(".")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("class")]),e._v(" is the model to set as tenant")]),e._v(" "),o("li",[o("code",[e._v("key")]),e._v(" is the column used to query against the set tenant model")]),e._v(" "),o("li",[o("code",[e._v("route_key")]),e._v(" is the value to be retrieved directly from the request in case none is available.")])]),e._v(" "),o("h2",{attrs:{id:"users"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#users"}},[e._v("#")]),e._v(" Users")]),e._v(" "),o("p",[e._v("This sets options for the users related to the tenant model.")]),e._v(" "),o("p",[e._v("Here you can also specify the:")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("model")]),e._v(" used for tenant user relationship and the rest will be resolved.")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("tenant_user")]),e._v(" It will be used as the "),o("code",[e._v("tenant users")]),e._v(" table name in case you don't follow Laravel's pivot table naming convention.")])])]),e._v(" "),o("h2",{attrs:{id:"connection"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#connection"}},[e._v("#")]),e._v(" Connection")]),e._v(" "),o("p",[e._v("Sets options for database connection. Only applicable for "),o("code",[e._v("multi-database")]),e._v(" driver.")]),e._v(" "),o("h2",{attrs:{id:"routes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#routes"}},[e._v("#")]),e._v(" Routes")]),e._v(" "),o("p",[e._v("You can publish routes by running: "),o("code",[e._v("php artisan vendor:publish --tag=tenancy-routes")])]),e._v(" "),o("p",[e._v("You can specify the route: "),o("code",[e._v("prefix")]),e._v(", "),o("code",[e._v("as")]),e._v(" (route names prefix), "),o("code",[e._v("namespace")]),e._v(", "),o("code",[e._v("middleware")]),e._v(" and route "),o("code",[e._v("file")]),e._v(".")]),e._v(" "),o("h3",{attrs:{id:"routes-file"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#routes-file"}},[e._v("#")]),e._v(" Routes file")]),e._v(" "),o("p",[e._v("All tenant routes by default are placed in the "),o("code",[e._v("routes/tenant.php")]),e._v(" file.")]),e._v(" "),o("h3",{attrs:{id:"middleware"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#middleware"}},[e._v("#")]),e._v(" Middleware")]),e._v(" "),o("p",[e._v("Routes middleware are grouped into: "),o("code",[e._v("before")]),e._v(" and "),o("code",[e._v("tenant")]),e._v(".")]),e._v(" "),o("p",[o("code",[e._v("before")]),e._v(" middleware are the ones to apply before the "),o("code",[e._v("tenant")]),e._v(" middleware is executed. eg. "),o("code",[e._v("web")]),e._v(", "),o("code",[e._v("auth")])]),e._v(" "),o("p",[o("code",[e._v("set_tenant")]),e._v(" middleware configures the middleware that resolves the current tenant.")]),e._v(" "),o("p",[e._v("It has the following options:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("in_tenant")]),e._v(": If set "),o("code",[e._v("true")]),e._v(", it determines whether the current user is authorized to access tenant.")]),e._v(" "),o("li",[o("code",[e._v("in_header")]),e._v(": If set "),o("code",[e._v("true")]),e._v(", it determines whether the current tenant should be fetched from header.")])]),e._v(" "),o("p",[o("code",[e._v("tenant")]),e._v(" middleware are the ones to apply along with the default package middleware.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("Tenant routes by default are set to use the "),o("code",[e._v("web")]),e._v(" middleware, but basically they can be stateless.")])]),e._v(" "),o("h2",{attrs:{id:"redirect"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#redirect"}},[e._v("#")]),e._v(" Redirect")]),e._v(" "),o("p",[e._v("By default you can use the "),o("code",[e._v("tenant.switch")]),e._v(" route passing in a "),o("code",[e._v("model")]),e._v(" to handle switching between tenants.")]),e._v(" "),o("p",[e._v("The config for this route lies in the key "),o("code",[e._v("redirect")]),e._v(".")]),e._v(" "),o("p",[e._v("You can set the following options for this route:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("url")]),e._v(": The url to redirect to when a tenant is resolved. It must be under tenant routes. See "),o("a",{attrs:{href:"#routes-file"}},[e._v("Routes file")])]),e._v(" "),o("li",[o("code",[e._v("abort")]),e._v(": Set "),o("code",[e._v("true")]),e._v(" if you would like to abort incase a tenant is not found or user is not authorized to access tenant.")]),e._v(" "),o("li",[o("code",[e._v("fallback_url")]),e._v(": The url to redirect user to if tenant was not found. Works only if the "),o("code",[e._v("abort")]),e._v(" option is set to "),o("code",[e._v("true")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("middleware")]),e._v(": The middleware to apply to protect this route.")])]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("It is not a must to use this option. You can set your own tenant switching functionality.")])]),e._v(" "),o("h2",{attrs:{id:"store"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[e._v("#")]),e._v(" Store")]),e._v(" "),o("p",[e._v("This controls the key and driver used to put and retrieve the tenant currently used.")]),e._v(" "),o("p",[e._v("It has two options:\n-"),o("code",[e._v("key")]),e._v(": Prefix of used to identify a the user's current tenant.\n-"),o("code",[e._v("driver")]),e._v(": The type of storage to keep the user's tenant. The default is "),o("code",[e._v("session")]),e._v(".")]),e._v(" "),o("p",[e._v("Supported store drivers are: "),o("code",[e._v("session")]),e._v(", "),o("code",[e._v("cache")]),e._v(", "),o("code",[e._v("cookie")])]),e._v(" "),o("h2",{attrs:{id:"console"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[e._v("#")]),e._v(" Console")]),e._v(" "),o("p",[e._v("Configure the console options to be used by the tenant.")]),e._v(" "),o("h3",{attrs:{id:"commands"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[e._v("#")]),e._v(" Commands")]),e._v(" "),o("p",[e._v("You can add commands to be registered for use by the tenant.")]),e._v(" "),o("p",[e._v("They are grouped into two options:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("migrator")]),e._v(": For migration commands.")]),e._v(" "),o("li",[o("code",[e._v("db")]),e._v(": For database commands.")])]),e._v(" "),o("p",[e._v("See "),o("RouterLink",{attrs:{to:"/guide/console/"}},[e._v("Console")]),e._v(" to learn more on console.")],1),e._v(" "),o("h2",{attrs:{id:"drivers"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#drivers"}},[e._v("#")]),e._v(" Drivers")]),e._v(" "),o("p",[e._v("You can add custom drivers here. By default two drivers are included: "),o("code",[e._v("single")]),e._v(" and "),o("code",[e._v("multi")]),e._v(".")]),e._v(" "),o("p",[e._v("See "),o("RouterLink",{attrs:{to:"/guide/drivers/"}},[e._v("Drivers")]),e._v(" to learn more on drivers.")],1)])}),[],!1,null,null,null);t.default=s.exports}}]);